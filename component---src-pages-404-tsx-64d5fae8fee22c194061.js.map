{"version":3,"file":"component---src-pages-404-tsx-64d5fae8fee22c194061.js","mappings":"mKAAA,EAAe,IAA0B,oD,SCWlC,MAAMA,EAAMC,IAMiB,IANhB,MAChBC,EAAK,KACLC,EAAI,YACJC,EAAW,SACXC,EAAQ,SACRC,GAC0BL,EAC1B,MACIC,MAAOK,EACPH,YAAaI,EACbC,IAAKC,GACLC,EACEC,EAAM,CACRC,KAAMF,EAAAA,KACNT,MAAOC,EACED,EAAK,MAAMC,EAAI,MAAMI,EACrBL,EAAK,MAAMK,EACpBH,YAAaA,QAAAA,EAAeI,EAC5BM,MAAM,GAAIJ,EAAUI,EACpBL,IAAI,GAAIC,GAAUL,GAAQ,KAG9B,OACIU,EAAAA,EAAAA,IAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,IAAA,aAAQH,EAAIV,QACZa,EAAAA,EAAAA,IAAA,QAAMF,KAAK,QAAQI,QAASL,EAAIE,SAChCC,EAAAA,EAAAA,IAAA,QAAMF,KAAK,cAAcI,QAASL,EAAIR,eAGtCW,EAAAA,EAAAA,IAAA,QAAMG,SAAS,WAAWD,QAASL,EAAIV,SACvCa,EAAAA,EAAAA,IAAA,QAAMG,SAAS,UAAUD,QAAQ,aACjCF,EAAAA,EAAAA,IAAA,QAAMG,SAAS,WAAWD,QAASL,EAAIE,SACvCC,EAAAA,EAAAA,IAAA,QAAMG,SAAS,SAASD,QAASL,EAAIH,OACrCM,EAAAA,EAAAA,IAAA,QAAMG,SAAS,iBAAiBD,QAASL,EAAIR,eAC7CW,EAAAA,EAAAA,IAAA,QAAMG,SAAS,eAAeD,QAASL,EAAIC,QAC3CE,EAAAA,EAAAA,IAAA,QAAMG,SAAS,YAAYD,QAAQ,WAGnCF,EAAAA,EAAAA,IAAA,QAAMF,KAAK,eAAeI,QAASL,EAAIE,SACvCC,EAAAA,EAAAA,IAAA,QAAMF,KAAK,gBAAgBI,QAASL,EAAIC,QACxCE,EAAAA,EAAAA,IAAA,QAAMF,KAAK,sBAAsBI,QAASL,EAAIR,eAC9CW,EAAAA,EAAAA,IAAA,QAAMF,KAAK,gBAAgBI,QAASL,EAAIE,SAGxCC,EAAAA,EAAAA,IAAA,QAAMF,KAAK,yBAAyBI,QAAQ,QAC3CX,EACF,C,sHCpDX,MAAMa,EAAa,CACfC,MAAO,UACPC,QAAS,OACTC,WAAY,4CAEVC,EAAgB,CAClBC,UAAW,EACXC,aAAc,GACdC,SAAU,KAGRC,EAAkB,CACpBF,aAAc,IAgClB,UAtB0CG,KAElCb,EAAAA,EAAAA,IAAA,QAAMc,MAAOV,IACTJ,EAAAA,EAAAA,IAAA,MAAIc,MAAON,GAAe,mBAC1BR,EAAAA,EAAAA,IAAA,KAAGc,MAAOF,GAAiB,yDAEvBZ,EAAAA,EAAAA,IAAA,WAQI,MACJA,EAAAA,EAAAA,IAAA,YACAA,EAAAA,EAAAA,IAACe,EAAAA,KAAI,CAACC,GAAG,KAAI,WAAc,MAQpC,MAAMC,EAAOA,KAChBjB,EAAAA,EAAAA,IAACf,EAAAA,EAAG,CAACE,MAAO,YAAaE,YAAaO,EAAAA,YAAkBN,SAAU,K","sources":["webpack://portfolio/./src/images/image.png","webpack://portfolio/./src/components/layout/seo.tsx","webpack://portfolio/./src/pages/404.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/image-e6793d931611d9e23235f26f5529ff5f.png\";","import React, { PropsWithChildren } from 'react';\nimport data from '../../../website.json';\nimport image from '../../images/image.png';\n\nexport interface SEOProps {\n    title: string;\n    area?: string;\n    description: string;\n    pathname?: string;\n}\n\nexport const SEO = ({\n    title,\n    area,\n    description,\n    pathname,\n    children,\n}: PropsWithChildren<SEOProps>) => {\n    const {\n        title: defaultTitle,\n        description: defaultDescription,\n        url: siteUrl,\n    } = data;\n    const seo = {\n        name: data.name,\n        title: area\n            ? `${title} | ${area} | ${defaultTitle}`\n            : `${title} | ${defaultTitle}`,\n        description: description ?? defaultDescription,\n        image: `${siteUrl}${image}`,\n        url: `${siteUrl}${pathname || ``}`,\n    };\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"image\" content={seo.image} />\n            <meta name=\"description\" content={seo.description} />\n\n            {/*Open Graph (OG) Tags for Facebook*/}\n            <meta property=\"og:title\" content={seo.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:image\" content={seo.image} />\n            <meta property=\"og:url\" content={seo.url} />\n            <meta property=\"og:description\" content={seo.description} />\n            <meta property=\"og:site_name\" content={seo.name} />\n            <meta property=\"og:locale\" content=\"en_US\" />\n\n            {/*Twitter Card Tags*/}\n            <meta name=\"twitter:card\" content={seo.image} />\n            <meta name=\"twitter:title\" content={seo.name} />\n            <meta name=\"twitter:description\" content={seo.description} />\n            <meta name=\"twitter:image\" content={seo.image} />\n\n            {/*Apple*/}\n            <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n            {children}\n        </>\n    );\n};\n","import { HeadFC, Link, PageProps } from 'gatsby';\nimport * as React from 'react';\nimport { SEO } from '../components/layout/seo';\nimport data from '../../website.json';\n\nconst pageStyles = {\n    color: '#232129',\n    padding: '96px',\n    fontFamily: '-apple-system, Roboto, sans-serif, serif',\n};\nconst headingStyles = {\n    marginTop: 0,\n    marginBottom: 64,\n    maxWidth: 320,\n};\n\nconst paragraphStyles = {\n    marginBottom: 48,\n};\nconst codeStyles = {\n    color: '#8A6534',\n    padding: 4,\n    backgroundColor: '#FFF4DB',\n    fontSize: '1.25rem',\n    borderRadius: 4,\n};\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n    return (\n        <main style={pageStyles}>\n            <h1 style={headingStyles}>Page not found</h1>\n            <p style={paragraphStyles}>\n                Sorry ðŸ˜”, we couldnâ€™t find what you were looking for.\n                <br />\n                {process.env.NODE_ENV === 'development' ? (\n                    <>\n                        <br />\n                        Try creating a page in{' '}\n                        <code style={codeStyles}>src/pages/</code>.\n                        <br />\n                    </>\n                ) : null}\n                <br />\n                <Link to=\"/\">Go home</Link>.\n            </p>\n        </main>\n    );\n};\n\nexport default NotFoundPage;\n\nexport const Head = () => (\n    <SEO title={'Not Found'} description={data.description} pathname={'/'} />\n);\n"],"names":["SEO","_ref","title","area","description","pathname","children","defaultTitle","defaultDescription","url","siteUrl","data","seo","name","image","___EmotionJSX","React","content","property","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","maxWidth","paragraphStyles","NotFoundPage","style","Link","to","Head"],"sourceRoot":""}